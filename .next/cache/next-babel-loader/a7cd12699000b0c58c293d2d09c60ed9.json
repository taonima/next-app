{"ast":null,"code":"const request = (url, config) => {\n  return fetch(url, config).then(res => {\n    if (!res.ok) {\n      throw Error('');\n    }\n\n    return res.json();\n  }).then(resJson => {\n    if (resJson.code !== 200) {\n      throw Error(resJson.message);\n    } else {\n      return resJson.data;\n    }\n  }).catch(error => {\n    // 公共错误处理\n    console.log(error);\n  });\n};\n\nexport const get = (url, params) => {\n  url = `${process.env.BASE_URL}${url}`;\n\n  if (params) {\n    url += Object.keys(params).reduce((accumulator, currentValue, index) => {\n      return `${index !== 0 ? '&' : ''}${accumulator}${currentValue}=${params[currentValue]}`;\n    }, '?');\n  }\n\n  return request(url, {\n    method: 'GET'\n  });\n};\nexport const post = (url, params = {}) => {\n  return request(url, {\n    body: JSON.stringify(params),\n    headers: {\n      'content-type': 'application/json'\n    },\n    method: 'POST'\n  });\n};\nexport default {\n  get,\n  post\n};","map":{"version":3,"sources":["D:/WebstormProjects/next-app/utils/request.ts"],"names":["request","url","config","fetch","then","res","ok","Error","json","resJson","code","message","data","catch","error","console","log","get","params","process","env","BASE_URL","Object","keys","reduce","accumulator","currentValue","index","method","post","body","JSON","stringify","headers"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,GAAD,EAAcC,MAAd,KAA8B;AAC1C,SAAOC,KAAK,CAACF,GAAD,EAAMC,MAAN,CAAL,CAAmBE,IAAnB,CAAyBC,GAAD,IAAc;AACzC,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,YAAMC,KAAK,CAAC,EAAD,CAAX;AACH;;AACD,WAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,GALM,EAKJJ,IALI,CAKEK,OAAD,IAAkB;AACtB,QAAIA,OAAO,CAACC,IAAR,KAAiB,GAArB,EAA0B;AACtB,YAAMH,KAAK,CAACE,OAAO,CAACE,OAAT,CAAX;AACH,KAFD,MAEO;AACH,aAAOF,OAAO,CAACG,IAAf;AACH;AACJ,GAXM,EAWJC,KAXI,CAWGC,KAAD,IAAgB;AACrB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdM,CAAP;AAeH,CAhBD;;AAkBA,OAAO,MAAMG,GAAG,GAAG,CAAChB,GAAD,EAAMiB,MAAN,KAAkB;AACjCjB,EAAAA,GAAG,GAAI,GAAEkB,OAAO,CAACC,GAAR,CAAYC,QAAS,GAAEpB,GAAI,EAApC;;AACA,MAAIiB,MAAJ,EAAY;AACRjB,IAAAA,GAAG,IAAIqB,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,CAA2B,CAACC,WAAD,EAAcC,YAAd,EAA4BC,KAA5B,KAAsC;AACpE,aAAQ,GAAEA,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoB,EAAG,GAAEF,WAAY,GAAEC,YAAa,IAAGR,MAAM,CAACQ,YAAD,CAAe,EAAtF;AACH,KAFM,EAEJ,GAFI,CAAP;AAGH;;AACD,SAAO1B,OAAO,CAACC,GAAD,EAAK;AAAC2B,IAAAA,MAAM,EAAE;AAAT,GAAL,CAAd;AACH,CARM;AAUP,OAAO,MAAMC,IAAI,GAAG,CAAC5B,GAAD,EAAMiB,MAAM,GAAG,EAAf,KAAsB;AACtC,SAAOlB,OAAO,CAACC,GAAD,EAAM;AAChB6B,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,MAAf,CADU;AAEhBe,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFO;AAKhBL,IAAAA,MAAM,EAAE;AALQ,GAAN,CAAd;AAOH,CARM;AAUP,eAAe;AACXX,EAAAA,GADW;AAEXY,EAAAA;AAFW,CAAf","sourcesContent":["const request = (url: string, config: any) => {\r\n    return fetch(url, config).then((res: any) => {\r\n        if (!res.ok) {\r\n            throw Error('');\r\n        }\r\n        return res.json();\r\n    }).then((resJson: any) => {\r\n        if (resJson.code !== 200) {\r\n            throw Error(resJson.message);\r\n        } else {\r\n            return resJson.data;\r\n        }\r\n    }).catch((error: any) => {\r\n        // 公共错误处理\r\n        console.log(error)\r\n    });\r\n};\r\n\r\nexport const get = (url, params?) => {\r\n    url = `${process.env.BASE_URL}${url}`;\r\n    if (params) {\r\n        url += Object.keys(params).reduce((accumulator, currentValue, index) => {\r\n            return `${index !== 0 ? '&' : ''}${accumulator}${currentValue}=${params[currentValue]}`\r\n        }, '?')\r\n    }\r\n    return request(url,{method: 'GET'})\r\n}\r\n\r\nexport const post = (url, params = {}) => {\r\n    return request(url, {\r\n        body: JSON.stringify(params),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST'\r\n    });\r\n}\r\n\r\nexport default {\r\n    get,\r\n    post\r\n}"]},"metadata":{},"sourceType":"module"}