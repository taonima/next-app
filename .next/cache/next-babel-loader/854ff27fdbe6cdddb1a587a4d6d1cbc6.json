{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\WebstormProjects\\\\next-app\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components';\nimport React from \"react\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"html\", {\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"My page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n          children: `\n            #__next { height: 100% }\n          `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), this.props.styleTags]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        style: {\n          height: '100%',\n          margin: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\nexport const getInitialProps = async () => {\n  const sheet = new ServerStyleSheet();\n  const page = renderPage(App => props => sheet.collectStyles( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 65\n  }, this)));\n  const styleTags = sheet.getStyleElement();\n  return _objectSpread(_objectSpread({}, page), {}, {\n    styleTags\n  });\n};\nexport default MyApp;","map":{"version":3,"sources":["D:/WebstormProjects/next-app/pages/_app.tsx"],"names":["Head","Main","NextScript","ServerStyleSheet","React","MyApp","Component","pageProps","height","props","styleTags","margin","getInitialProps","sheet","page","renderPage","App","collectStyles","getStyleElement"],"mappings":";;;;;;;;;;AACA,SAAmBA,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAmD;AAC/C,sBACI;AAAA,2BACI;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA,8BACA,QAAC,IAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAS;AACzB;AACA;AAFgB;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAMK,KAAKC,KAAL,CAAWC,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eASA;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,MAAM,EAAE,MAAV;AAAkBG,UAAAA,MAAM,EAAE;AAA1B,SAAb;AAAA,gCACA,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA2BH;;AAED,OAAO,MAAMC,eAAgC,GAAG,YAAY;AACxD,QAAMC,KAAK,GAAG,IAAIV,gBAAJ,EAAd;AACA,QAAMW,IAAI,GAAGC,UAAU,CAACC,GAAG,IAAIP,KAAK,IAAII,KAAK,CAACI,aAAN,eAAoB,QAAC,GAAD,oBAASR,KAAT;AAAA;AAAA;AAAA;AAAA,UAApB,CAAjB,CAAvB;AACA,QAAMC,SAAS,GAAGG,KAAK,CAACK,eAAN,EAAlB;AACA,yCAAYJ,IAAZ;AAAkBJ,IAAAA;AAAlB;AACH,CALM;AAOP,eAAeL,KAAf","sourcesContent":["import type { AppProps /*, AppContext */ } from 'next/app'\r\nimport Document, { Head, Main, NextScript } from 'next/document'\r\nimport { ServerStyleSheet } from 'styled-components'\r\n\r\nimport React from \"react\";\r\nimport styles from './index.less'\r\nimport {GetStaticProps} from \"next\";\r\n\r\nfunction MyApp({ Component, pageProps }: AppProps) {\r\n    return (\r\n        <>\r\n            <html style={{ height: '100%'}}>\r\n            <Head>\r\n                <title>My page</title>\r\n                <style>{`\r\n            #__next { height: 100% }\r\n          `}\r\n                </style>\r\n                {this.props.styleTags}\r\n            </Head>\r\n            <body style={{ height: '100%', margin: 0}}>\r\n            <Main />\r\n            <NextScript />\r\n            </body>\r\n            </html>\r\n            {/*<div className={styles.MyApp}>*/}\r\n            {/*    <div>*/}\r\n\r\n            {/*    </div>*/}\r\n            {/*    <div>*/}\r\n            {/*        <Component {...pageProps} />*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport const getInitialProps : GetStaticProps = async () => {\r\n    const sheet = new ServerStyleSheet()\r\n    const page = renderPage(App => props => sheet.collectStyles(<App {...props} />))\r\n    const styleTags = sheet.getStyleElement()\r\n    return { ...page, styleTags }\r\n}\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}