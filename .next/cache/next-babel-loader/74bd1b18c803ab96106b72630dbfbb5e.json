{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { POST, PUT } from \"@/utils/request\";\nconst FormItem = _Form.Item;\nconst layout = {\n  labelCol: {\n    span: 7\n  },\n  wrapperCol: {\n    span: 13\n  }\n};\n\nconst Index = (props, ref) => {\n  const {\n    callBack\n  } = props;\n\n  const [form] = _Form.useForm();\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({});\n  useImperativeHandle(ref, () => ({\n    open\n  }));\n\n  const open = (record = {}) => {\n    form.setFieldsValue(record);\n    setFormData(record);\n    setVisible(true);\n  };\n\n  const close = () => {\n    form.resetFields();\n    setVisible(false);\n  };\n\n  const save = () => {\n    form.validateFields().then(value => {\n      if (formData.id) {\n        PUT(`blog/fund/${formData.id}`, value).then(() => {\n          _message.success('修改成功');\n\n          close();\n          callBack();\n        });\n      } else {\n        POST('blog/fund', value).then(() => {\n          _message.success('新增成功');\n\n          close();\n          callBack();\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsx(_Modal, {\n    title: '配置',\n    visible: visible,\n    onCancel: close,\n    onOk: save,\n    maskClosable: false,\n    children: /*#__PURE__*/_jsxs(_Form, _objectSpread(_objectSpread({}, layout), {}, {\n      form: form,\n      children: [/*#__PURE__*/_jsx(FormItem, {\n        name: 'code',\n        label: '代码',\n        rules: [{\n          required: true,\n          message: '不能不填哦'\n        }],\n        children: /*#__PURE__*/_jsx(_Input, {\n          disabled: formData.id\n        })\n      }), /*#__PURE__*/_jsx(FormItem, {\n        name: 'ave_price',\n        label: '成本价',\n        rules: [{\n          required: true,\n          message: '不能不填哦'\n        }],\n        children: /*#__PURE__*/_jsx(_Input, {})\n      }), /*#__PURE__*/_jsx(FormItem, {\n        name: 'share',\n        label: '份额',\n        rules: [{\n          required: true,\n          message: '不能不填哦'\n        }],\n        children: /*#__PURE__*/_jsx(_Input, {})\n      })]\n    }))\n  });\n};\n\nexport default /*#__PURE__*/forwardRef(Index);","map":null,"metadata":{},"sourceType":"module"}