{"ast":null,"code":"const request = (url, config) => {\n  return fetch(url, config).then(res => {\n    if (!res.ok) {\n      throw Error('');\n    }\n\n    return res.json();\n  }).then(resJson => {\n    if (xxx) {\n      // 项目内部认为的错误\n      throw Error('');\n    } else {\n      return resJson;\n    }\n  }).catch(error => {\n    // 公共错误处理\n    console.log(error);\n  });\n};\n\nexport const get = (url, params) => {\n  url = `${process.env.BASE_URL}${url}`;\n\n  if (params) {\n    url += Object.keys(params).reduce((accumulator, currentValue, index) => {\n      return `${index !== 0 ? '&' : ''}${accumulator}${currentValue}=${params[currentValue]}`;\n    }, '?');\n  }\n\n  return fetch(url).then(res => res.json()).then(({\n    data\n  }) => data).catch(error => console.error('Error:', error));\n};\nexport const post = (url, params = {}) => {\n  return fetch(`${process.env.BASE_URL}${url}`, {\n    method: 'POST',\n    body: JSON.stringify(params),\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).then(res => res.json()).then(({\n    data\n  }) => data).catch(error => console.error('Error:', error));\n};\nexport default {\n  get,\n  post\n};","map":{"version":3,"sources":["D:/WebstormProjects/next-app/utils/request.ts"],"names":["request","url","config","fetch","then","res","ok","Error","json","resJson","xxx","catch","error","console","log","get","params","process","env","BASE_URL","Object","keys","reduce","accumulator","currentValue","index","data","post","method","body","JSON","stringify","headers","Headers"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,GAAD,EAAcC,MAAd,KAA8B;AAC1C,SAAOC,KAAK,CAACF,GAAD,EAAMC,MAAN,CAAL,CAAmBE,IAAnB,CAAyBC,GAAD,IAAc;AACzC,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,YAAMC,KAAK,CAAC,EAAD,CAAX;AACH;;AACD,WAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,GALM,EAKJJ,IALI,CAKEK,OAAD,IAAkB;AACtB,QAAIC,GAAJ,EAAS;AACL;AACA,YAAMH,KAAK,CAAC,EAAD,CAAX;AACH,KAHD,MAGO;AACH,aAAOE,OAAP;AACH;AACJ,GAZM,EAYJE,KAZI,CAYGC,KAAD,IAAgB;AACrB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAfM,CAAP;AAgBH,CAjBD;;AAmBA,OAAO,MAAMG,GAAG,GAAG,CAACd,GAAD,EAAMe,MAAN,KAAkB;AACjCf,EAAAA,GAAG,GAAI,GAAEgB,OAAO,CAACC,GAAR,CAAYC,QAAS,GAAElB,GAAI,EAApC;;AACA,MAAIe,MAAJ,EAAY;AACRf,IAAAA,GAAG,IAAImB,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,CAA2B,CAACC,WAAD,EAAcC,YAAd,EAA4BC,KAA5B,KAAsC;AACpE,aAAQ,GAAEA,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoB,EAAG,GAAEF,WAAY,GAAEC,YAAa,IAAGR,MAAM,CAACQ,YAAD,CAAe,EAAtF;AACH,KAFM,EAEJ,GAFI,CAAP;AAGH;;AACD,SAAOrB,KAAK,CAACF,GAAD,CAAL,CACFG,IADE,CACGC,GAAG,IAAIA,GAAG,CAACG,IAAJ,EADV,EAEFJ,IAFE,CAEG,CAAC;AAACsB,IAAAA;AAAD,GAAD,KAAYA,IAFf,EAGFf,KAHE,CAGIC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAHb,CAAP;AAIH,CAXM;AAaP,OAAO,MAAMe,IAAI,GAAG,CAAC1B,GAAD,EAAMe,MAAM,GAAG,EAAf,KAAsB;AACtC,SAAOb,KAAK,CAAE,GAAEc,OAAO,CAACC,GAAR,CAAYC,QAAS,GAAElB,GAAI,EAA/B,EAAkC;AAC1C2B,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,MAAf,CAFoC;AAG1CgB,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,sBAAgB;AADC,KAAZ;AAHiC,GAAlC,CAAL,CAOF7B,IAPE,CAOGC,GAAG,IAAIA,GAAG,CAACG,IAAJ,EAPV,EAQFJ,IARE,CAQG,CAAC;AAACsB,IAAAA;AAAD,GAAD,KAAYA,IARf,EASFf,KATE,CASIC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CATb,CAAP;AAUH,CAXM;AAaP,eAAe;AACXG,EAAAA,GADW;AAEXY,EAAAA;AAFW,CAAf","sourcesContent":["const request = (url: string, config: any) => {\r\n    return fetch(url, config).then((res: any) => {\r\n        if (!res.ok) {\r\n            throw Error('');\r\n        }\r\n        return res.json();\r\n    }).then((resJson: any) => {\r\n        if (xxx) {\r\n            // 项目内部认为的错误\r\n            throw Error('');\r\n        } else {\r\n            return resJson;\r\n        }\r\n    }).catch((error: any) => {\r\n        // 公共错误处理\r\n        console.log(error)\r\n    });\r\n};\r\n\r\nexport const get = (url, params?) => {\r\n    url = `${process.env.BASE_URL}${url}`;\r\n    if (params) {\r\n        url += Object.keys(params).reduce((accumulator, currentValue, index) => {\r\n            return `${index !== 0 ? '&' : ''}${accumulator}${currentValue}=${params[currentValue]}`\r\n        }, '?')\r\n    }\r\n    return fetch(url)\r\n        .then(res => res.json())\r\n        .then(({data}) => data)\r\n        .catch(error => console.error('Error:', error))\r\n}\r\n\r\nexport const post = (url, params = {}) => {\r\n    return fetch(`${process.env.BASE_URL}${url}`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(params),\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json'\r\n        }),\r\n    })\r\n        .then(res => res.json())\r\n        .then(({data}) => data)\r\n        .catch(error => console.error('Error:', error))\r\n}\r\n\r\nexport default {\r\n    get,\r\n    post\r\n}"]},"metadata":{},"sourceType":"module"}