{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\WebstormProjects\\\\next-app\\\\pages\\\\index.tsx\";\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  const router = useRouter();\n  useEffect(() => {\n    const handleRouteChangeError = (err, url) => {\n      if (err.cancelled) {\n        console.log(`Route to ${url} was cancelled!`);\n      }\n    };\n\n    router.events.on('routeChangeError', handleRouteChangeError); // If the component is unmounted, unsubscribe\n    // from the event with the `off` method:\n\n    return () => {\n      router.events.off('routeChangeError', handleRouteChangeError);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"layout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/WebstormProjects/next-app/pages/index.tsx"],"names":["useEffect","useRouter","MyApp","Component","pageProps","router","handleRouteChangeError","err","url","cancelled","console","log","events","on","off"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACpD,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,sBAAsB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzC,UAAID,GAAG,CAACE,SAAR,EAAmB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAa,YAAWH,GAAI,iBAA5B;AACH;AACJ,KAJD;;AAMAH,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCP,sBAArC,EAPY,CASZ;AACA;;AACA,WAAO,MAAM;AACTD,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCR,sBAAtC;AACH,KAFD;AAGH,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH","sourcesContent":["import { useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\n\r\nexport default function MyApp({ Component, pageProps }) {\r\n    const router = useRouter()\r\n\r\n    useEffect(() => {\r\n        const handleRouteChangeError = (err, url) => {\r\n            if (err.cancelled) {\r\n                console.log(`Route to ${url} was cancelled!`)\r\n            }\r\n        }\r\n\r\n        router.events.on('routeChangeError', handleRouteChangeError)\r\n\r\n        // If the component is unmounted, unsubscribe\r\n        // from the event with the `off` method:\r\n        return () => {\r\n            router.events.off('routeChangeError', handleRouteChangeError)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            layout\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}